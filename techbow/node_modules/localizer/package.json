{
  "name": "localizer",
  "description": "Localized and configureable async and sync `requre.resolve()` implementation.",
  "version": "0.2.2",
  "author": {
    "name": "Andreas Madsen",
    "email": "amwebdk@gmail.com"
  },
  "main": "./localizer.js",
  "scripts": {
    "test": "tap test/simple/*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/AndreasMadsen/localizer.git"
  },
  "keywords": [
    "module",
    "require",
    "resolve",
    "filepath",
    "node_modules"
  ],
  "devDependencies": {
    "tap": "0.3.x"
  },
  "license": "MIT",
  "engines": {
    "node": "0.10 || 0.9 || 0.8",
    "npm": "1"
  },
  "readme": "#localizer\n\n> Localized and configureable async and sync `requre.resolve()` implementation.\n\n## Installation\n\n```sheel\nnpm install localizer\n```\n\n## Documentation\n\n```javascript\nvar localizer = require('localizer');\n\n// localizer is a constructor function there creates a resolve function\nvar resolve = localizer({\n  // default: '/'. Specify search limitation, very useful in secure module\n  // resolving. Note that all resolved filepath will not contain the root\n  // as a prefix.\n  root: '/nothing/below/',\n\n  // default: 'node_modules'. Specify the directory name where modules are\n  // stored.\n  modules: 'other_modules',\n\n  // default: ['js', 'json', 'node'] specify allowed filetypes, note that the\n  // order matters. in this example index.js is prioritized over index.coffee\n  allowed: ['js', 'coffee', 'json', 'yaml'],\n\n  // allowed can also be a function, if that is the case it will transform a\n  // single basename (e.q. index or index.js) intro multiply basenames given by\n  // an array.\n  allowed: function (basename) {\n    // example, where fileexts are removed and replaced with '.js'\n    // (e.q. index.json => index.js)\n    return [basename.split('.').shift() + '.js' /*, more basenames */];\n  }\n});\n\n// The resolve function has two required arguments.\n// - The first is the directroy where the search should start,\n//   the require.resolve equivalent is __dirname.\n// - The second is the actual search query.\n//\n// It also has an optional callback, if specified the resolve algoritme will\n// be performed none blocking.\n\n// sync call\nvar filepath = resolve('/', 'module_name');\n\n// async call\nresolve('/', 'module_name', function (err, filepath) {\n\n});\n```\n\n##License\n\n**The software is license under \"MIT\"**\n\n> Copyright (c) 2013 Andreas Madsen\n>\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "localizer@0.2.2",
  "dist": {
    "shasum": "2dcbf654cc676f9f3d8765f6bd77b8ad46227da0",
    "tarball": "http://registry.npmjs.org/localizer/-/localizer-0.2.2.tgz"
  },
  "_npmVersion": "1.1.70",
  "_npmUser": {
    "name": "andreasmadsen",
    "email": "amwebdk@gmail.com"
  },
  "maintainers": [
    {
      "name": "andreasmadsen",
      "email": "amwebdk@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "2dcbf654cc676f9f3d8765f6bd77b8ad46227da0",
  "_from": "localizer@",
  "_resolved": "https://registry.npmjs.org/localizer/-/localizer-0.2.2.tgz"
}
